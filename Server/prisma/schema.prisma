// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id    Int     @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email String @unique   
  password  String
  firstName String?
  lastName String?
  favorites Favorite[]
  @@map("users")
}

model Favorite{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  movie Movie @relation(fields:[movieId],references: [id])
  movieId Int
  user User @relation(fields:[userId],references: [id])
  userId Int
  @@map("favorites")
}

model Movie{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String 
  favourite Favorite?
  filters FiltersOnMovies[]
  @@map("movies")
}

model FilterType{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  code String @unique  
  name String
  filters Filter[]
  @@map("filterTypes")
}

model Filter{
  id Int @id @default(autoincrement())
  value String @unique  
  filterType FilterType @relation(fields:[filterTypeId],references: [id])
  filterTypeId Int
  movies FiltersOnMovies[]
  @@map("filters")
}

model FiltersOnMovies{
filter Filter @relation(fields: [filterId], references: [id])
filterId Int
movie Movie @relation(fields: [movieId] ,references: [id])
movieId Int
@@id([filterId, movieId])
}